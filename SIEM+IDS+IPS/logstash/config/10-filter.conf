filter {

        if [type] == "denied" {
        grok {
        break_on_match => true
        match => { "message" => "DENIED: " }
        add_tag => "iptables"
        add_tag => "iptables-denied"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "inbound" {
        grok {
        break_on_match => true
        match => { "message" => "INBOUND: " }
        add_tag => "iptables"
        add_tag => "iptables-inbound"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "outbound" {
        grok {
        break_on_match => true
        match => { "message" => "OUTBOUND: " }
        add_tag => "iptables"
        add_tag => "iptables-outbound"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "blockedhosts" {
        grok {
        break_on_match => true
        match => { "message" => "BLOCKEDHOSTS: " }
        add_tag => "iptables"
        add_tag => "iptables-blockedhosts"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "watched" {
        grok {
        break_on_match => true
        match => { "message" => "WATCHED: " }
        add_tag => "iptables"
        add_tag => "iptables-watched"
        add_tag => "iptables-destination-geo"
        }
}
        if [type] == "accepted" {
        grok {
        break_on_match => true
        match => { "message" => "ACCEPTED: " }
        add_tag => "iptables"
        add_tag => "iptables-accepted"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "unauthssh" {
        grok {
        break_on_match => true
        match => { "message" => "UNAUTH SSH: " }
        add_tag => "iptables"
        add_tag => "iptables-unauthssh"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "tripport" {
        grok {
        break_on_match => true
        match => { "message" => "TRIPPORT: " }
        add_tag => "iptables"
        add_tag => "iptables-tripport"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "scan" {
        grok {
        break_on_match => true
        match => { "message" => "SCAN: " }
        add_tag => "iptables"
        add_tag => "iptables-scan"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "prerouting" {
        grok {
        break_on_match => true
        match => { "message" => "PREROUTING: " }
        add_tag => "iptables"
        add_tag => "iptables-prerouting"
        add_tag => "iptables-source-geo"
        }
}
        if [type] == "postrouting" {
        grok {
        break_on_match => true
        match => { "message" => "POSTROUTING: " }
        add_tag => "iptables"
        add_tag => "iptables-postrouting"
        add_tag => "iptables-source-geo"
        }
}
        if ("iptables" in [tags]) {
        grok {
        named_captures_only => true
        patterns_dir => "/etc/logstash/grok/iptables.pattern"
        match => { "message" => "%{IPTABLES}" }
        }
}
        if ("iptables-source-geo" in [tags]) {
        geoip {
        source => "source_ip"
        database => "/etc/logstash/GeoLiteCity.dat"
        }
}
        if ("iptables-destination-geo" in [tags]) {
        geoip {
        source => "destination_ip"
        database => "/etc/logstash/GeoLiteCity.dat"
        }
}
        date {
        #use the field timestamp to match event time and
        #populate @timestamp field (used by Elasticsearch)
        #match => [ "timestamp", "MMM dd HH:mm:ss","MMM  dd HH:mm:ss"]
        match => [ "timestamp", "MMM dd YYY HH:mm:ss","MMM  d YYY HH:mm:ss","MMM  dd HH:mm:ss", "ISO8601" ]
        timezone => "US/Mountain"
        }
}